version: '3.4'

services:
  db:
    image: postgres
    restart: always
    container_name: db
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

    environment:
      POSTGRES_PASSWORD: password

  mongo:
    image: mongo
    restart: always
    container_name: mongo_data_base
    environment:
      MONGO_INITDB_DATABASE: data_to_document_db
    volumes:
      - mongo_data:/data/db

  build_map_admin:
    build:
      context: ./
      dockerfile: Dockerfile
    image: build_map_admin
    ports:
      - "3000:3000"

    restart: always
    container_name: build_map_admin
    depends_on:
      - db
    links:
      - db
    volumes:
      - ./file_store:/app/storage
    environment:
      RAILS_ENV: 'production'
      RACK_ENV: 'production'
      RAILS_SERVE_STATIC_FILES: 'true'
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_NAME:
      DATABASE_USERNAME:
      DATABASE_PASSWORD:
      SECRET_KEY_BASE:

      RAILS_LOG_TO_STDOUT: 'true'

  file_print_admin:
    image: azirumga/file_print_admin:master
    ports:
      - "3001:3000"

    restart: always
    container_name: file_print_admin
    depends_on:
      - mongo
    links:
      - mongo
    environment:
      RAILS_ENV: 'production'
      RACK_ENV: 'production'
      RAILS_SERVE_STATIC_FILES: 'true'
      DB_MONGO_DATABASE_NAME: data_to_document_db
      DB_MONGO_HOST: mongo
      DATA_TO_DOCUMENT_URL: data_to_document:3002

  data_to_document:
    image: azirumga/data_to_document:master
    ports:
      - "3002:3000"

    restart: always
    container_name: data_to_document
    depends_on:
      - mongo
    links:
      - mongo
    environment:
      RAILS_ENV: 'production'
      RACK_ENV: 'production'
      RAILS_SERVE_STATIC_FILES: 'true'
      DB_MONGO_DATABASE_NAME: data_to_document_db
      DB_MONGO_HOST: mongo
      SECRET_KEY_BASE:
volumes:
  mongo_data:

